name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-suffix: "docs"

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run checks
        run: |
          echo "ðŸš€ Checking lock file consistency with 'pyproject.toml'"
          uv lock --locked
          echo "ðŸš€ Linting code: Running pre-commit"
          uv run pre-commit run -a

  tests-and-type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-suffix: "all-deps-${{ matrix.python-version }}"

      - name: Install Python and dependencies
        run: |
          uv python install ${{ matrix.python-version }}
          uv sync --frozen --extra all

      - name: Run tests
        run: uv run python -m pytest tests/unit --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.11' }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --frozen

      - name: Check if documentation can be built
        run: uv run mkdocs build -s || echo "Documentation build failed - this is expected while docs are being updated"
        continue-on-error: true
